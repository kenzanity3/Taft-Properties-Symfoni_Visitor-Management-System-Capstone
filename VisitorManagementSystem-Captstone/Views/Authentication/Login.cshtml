@model VisitorManagementSystem_Captstone.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Symfoni Nichols Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- custom login styles -->
    <link rel="stylesheet" href="~/css/LoginIndex.css" />
</head>
<body>
    <!----------------------- Main Container -------------------------->
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <form asp-action="Login" method="post">
            <div class="login-container d-flex">  
                <div class="title col-md-6">
                    <div class="logo-name">
                        <img src="/images/symfoni-nicols-logo.png" alt="Symfoni logo" class="login-logo">
                        <h3>Symfoni Nichols Condominium</h3>
                    </div>
                </div>

              <div class="login-view">
                    <div class=" login-header">
                        <h1>Welcome Back!</h1>
                    </div>

                    <div class="mb-3 input-group">
                        <input type="text" class="form-control" name="Username" placeholder="Username" required>
                    </div>

                    <div class="mb-3 password-container input-group position-relative"> 
                    <input type="password" class="form-control" name="Password" id="passwordField"
                        placeholder="Password" required>   
                    </div>

                    <div class="form-row-options d-flex justify-content-between align-items-center mb-3">
                        <div class="form-check mb-0">
                            <input type="checkbox" class="form-check-input" id="rememberPassword" name="RememberMe">
                            <label class="form-check-label" for="rememberPassword">Remember my password</label>
                        </div>
                        <div class="forgot-password mb-0">
                            <a asp-action="ForgotPassword">Forgot Password?</a>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-login btn-primary w-100">
                        <i class="fas fa-sign-in-alt me-2"></i> Sign In
                    </button>

                    <!-- ✅ Sign Up prompt at the bottom of login form -->
                    <div class="signup-prompt-row d-flex mt-4">
                        <p class="mb-0 me-2">Do not have an Account?</p>
                        <a class="mb-0 signup-link" asp-action="SignUp">Sign Up?</a>
                    </div>
                </div>
            </div>
        </form>
      </div>

    @if (ViewData["LoginErrorMessage"] != null)
    {
        @if (ViewData["LoginErrorMessage"].ToString() == "Incorrect Username or Password!")
        {
            <script>
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "error",
                    title: "Username or password is incorrect! Please login again."
                });
            </script>
        }
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: '@TempData["SuccessMessage"]',
                showConfirmButton: false,
                timer: 3000
            });
        </script>
    }

    @if (TempData["ForgotPassMessage"] != null)
    {
        @if (TempData["ForgotPassMessage"].ToString() == "Your password has been successfully updated.")
        {
            <script>
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "success",
                    title: "Your password has been successfully updated."
                });
            </script>
        }
    }
</body>
</html>
