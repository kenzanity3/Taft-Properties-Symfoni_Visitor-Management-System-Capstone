@model List<VisitorManagementSystem_Capstone.ViewModels.UserDataBundle>
@{
    ViewData["Title"] = "Visitor Management";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string GetFullName(string? firstName, string? middleName, string? lastName)
    {
        if (string.IsNullOrWhiteSpace(firstName) || string.IsNullOrWhiteSpace(lastName))
            return "";
        return !string.IsNullOrWhiteSpace(middleName)
            ? $"{firstName} {middleName} {lastName}"
            : $"{firstName} {lastName}";
    }
}
<link rel="stylesheet" href="~/css/VisitorManagement.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>👤 Visitor List</h2>
    </div>
    <div class="roomowner-wrapper">
        <div class="mb-3 d-flex justify-content-between align-items-center">
            <input id="visitorSearch" class="form-control me-2" placeholder="Search Visitor..." />
        </div>
        <div>
            <button class="btn btn-refresh" onclick="location.reload()"><i class="bi bi-arrow-clockwise"></i> Refresh</button>
            <button class="btn btn-add" data-bs-toggle="modal" data-bs-target="#createVisitorModal">
                <i class="bi bi-person-plus"></i> Create Visitor
            </button>
        </div>
        <div class="table-responsive mt-3">
            <table class="table table-bordered table-striped" id="visitorTable">
                <thead>
                    <tr>
                        <th>User ID</th>
                        <th>Full Name</th>
                        <th>Contact Number</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var bundle in Model)
                        {
                            var user = bundle.User;
                            <tr>
                                <td>@user?.UserId</td>
                                <td>@GetFullName(user?.FirstName, user?.MiddleName, user?.LastName)</td>
                                <td>@user?.ContactNumber</td>
                                <td>
                                    <span class="badge bg-success">Active</span>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-info info-visitor-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#infoVisitorModal"
                                            data-userid="@user?.UserId"
                                            data-fullname="@GetFullName(user?.FirstName, user?.MiddleName, user?.LastName)"
                                            data-contact="@user?.ContactNumber"
                                            data-profilepic="@bundle.Visitor?.ProfilePicture">
                                        <i class="bi bi-info-circle"></i>
                                    </button>
                                    <button class="btn btn-sm btn-warning edit-visitor-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editVisitorModal"
                                            data-userid="@user?.UserId"
                                            data-firstname="@user?.FirstName"
                                            data-middlename="@user?.MiddleName"
                                            data-lastname="@user?.LastName"
                                            data-contact="@user?.ContactNumber"
                                            data-profilepic="@bundle.Visitor?.ProfilePicture">
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-danger delete-visitor-btn"
                                            data-userid="@user?.UserId">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="5" class="text-center">No visitors found.</td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- Create Visitor Modal -->
<div class="modal fade" id="createVisitorModal" tabindex="-1" aria-labelledby="createVisitorLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="CreateVisitor" asp-controller="VisitorManagement" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="createVisitorLabel">Create Visitor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">

                    <!-- Profile Picture -->
                    <div class="mb-3 text-center">
                        <img id="profilePreview" src="/images/default.png" alt="Profile Preview" class="rounded-circle" width="120" height="120" />
                        <input type="file" name="ProfilePictureFile" class="form-control mt-2"
                               accept="image/jpeg,image/png,image/jfif"
                               onchange="previewImage(this, 'profilePreview')" />
                        <div class="invalid-feedback">Only JPG, JPEG, JFIF and PNG files are allowed (max 5MB)</div>
                    </div>

                    <!-- First Name -->
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" name="User.FirstName" class="form-control" required />
                    </div>

                    <!-- Middle Name -->
                    <div class="mb-3">
                        <label class="form-label">Middle Name</label>
                        <input type="text" name="User.MiddleName" class="form-control" />
                    </div>

                    <!-- Last Name -->
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" name="User.LastName" class="form-control" required />
                    </div>

                    <!-- Contact Number -->
                    <div class="mb-3">
                        <label class="form-label">Contact Number</label>
                        <input type="text" name="User.ContactNumber" id="User_ContactNumber"
                               class="form-control"
                               pattern="^09\d{9}$"
                               maxlength="11"
                               required
                               oninput="validatePhilippineNumber(this)" />
                        <div class="invalid-feedback">Please enter a valid Philippine mobile number (09XXXXXXXXX)</div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Visitor</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Info Visitor Modal -->
<div class="modal fade" id="infoVisitorModal" tabindex="-1" aria-labelledby="infoVisitorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoVisitorModalLabel">Visitor Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center mb-3">
                    <img id="infoProfilePic" src="~/images/default.png" alt="Profile Picture"
                         class="profile-img-preview me-3" style="width: 100px; height: 100px; object-fit: cover;" />
                    <div>
                        <h5 id="infoFullName" class="mb-0"></h5>
                        <small id="infoUserId" class="text-muted"></small>
                        <div class="mt-2">
                            <span class="badge bg-success">Active</span>
                        </div>
                    </div>
                </div>
                <div class="mb-2">
                    <label class="form-label fw-bold">Contact Number:</label>
                    <div id="infoContact" class="text-muted"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Visitor Modal -->
<div class="modal fade" id="editVisitorModal" tabindex="-1" aria-labelledby="editVisitorModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <form id="editVisitorForm" method="post" asp-action="EditVisitor" asp-controller="VisitorManagement" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title" id="editVisitorModalLabel">Edit Visitor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="User.UserId" id="editUserId" />
                    <div class="mb-3 text-center">
                        <img id="editProfilePreview" src="~/images/default.png" alt="Profile Picture"
                             class="profile-img-preview" style="width: 100px; height: 100px; object-fit: cover;" />
                        <input id="editProfilePic" name="ProfilePictureFile" type="file"
                               class="form-control mt-2" accept="image/jpeg,image/png,image/jfif"
                               onchange="previewImage(this, 'editProfilePreview')" />
                        <div class="invalid-feedback">Only JPG, JPEG, JFIF and PNG files are allowed (max 5MB)</div>
                    </div>
                    <div class="mb-3">
                        <label for="editFirstName" class="form-label">First Name</label>
                        <input id="editFirstName" name="User.FirstName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="editMiddleName" class="form-label">Middle Name</label>
                        <input id="editMiddleName" name="User.MiddleName" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="editLastName" class="form-label">Last Name</label>
                        <input id="editLastName" name="User.LastName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="editContactNumber" class="form-label">Contact Number</label>
                        <input id="editContactNumber" name="User.ContactNumber" class="form-control"
                               maxlength="11" minlength="11" required
                               pattern="^09\d{9}$" inputmode="numeric"
                               oninput="validatePhilippineNumber(this)" />
                        <div class="invalid-feedback">Please enter a valid Philippine mobile number (09XXXXXXXXX)</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Validate Philippine mobile number format (09XXXXXXXXX)
        function validatePhilippineNumber(input) {
            // Remove non-numeric characters
            input.value = input.value.replace(/[^0-9]/g, '');

            // Limit to 11 digits
            if (input.value.length > 11) {
                input.value = input.value.slice(0, 11);
            }

            // Validate format
            const isValid = /^09\d{9}$/.test(input.value);
            if (input.value && !isValid) {
                input.classList.add('is-invalid');
            } else {
                input.classList.remove('is-invalid');
            }
        }
        // Search Visitor
        $('#visitorSearch').on('keyup', function () {
            const value = $(this).val().toLowerCase();
            $('#visitorTable tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        // Info Modal population
        $(document).on('click', '.info-visitor-btn', function () {
            const btn = $(this);
            $('#infoUserId').text(btn.data('userid'));
            $('#infoFullName').text(btn.data('fullname'));
            $('#infoContact').text(btn.data('contact'));
            const profilePic = btn.data('profilepic') || '/images/default.png';
            $('#infoProfilePic').attr('src', profilePic);
        });

        // Edit Modal population
        $(document).on('click', '.edit-visitor-btn', function () {
            const btn = $(this);
            $('#editUserId').val(btn.data('userid'));
            $('#editFirstName').val(btn.data('firstname'));
            $('#editMiddleName').val(btn.data('middlename'));
            $('#editLastName').val(btn.data('lastname'));
            $('#editContactNumber').val(btn.data('contact'));
            const profilePic = btn.data('profilepic') || '/images/default.png';
            $('#editProfilePreview').attr('src', profilePic);
        });

        // SweetAlert for soft delete
        $(document).on('click', '.delete-visitor-btn', function () {
            const userId = $(this).data('userid');
            Swal.fire({
                title: 'Are you sure?',
                text: "This will delete the visitor from the list (soft delete).",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("SoftDeleteVisitor", "VisitorManagement")', { id: userId }, function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: response.message,
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => location.reload());
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message
                            });
                        }
                    });
                }
            });
        });

              // Replace the existing previewImage function with this:
        function previewImage(input, previewId) {
            if (input.files && input.files[0]) {
                const file = input.files[0];

                // Validate file type
                const validTypes = ['image/jpeg', 'image/png', 'image/jfif'];
                if (!validTypes.includes(file.type)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid File Type',
                        text: 'Only JPG, JPEG, and PNG images are allowed.'
                    });
                    input.value = '';
                    return;
                }

                // Validate file size (max 5MB)
                const maxSize = 5 * 1024 * 1024;
                if (file.size > maxSize) {
                    Swal.fire({
                        icon: 'error',
                        title: 'File Too Large',
                        text: 'Maximum file size is 5MB.'
                    });
                    input.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    $('#' + previewId).attr('src', e.target.result);
                };
                reader.readAsDataURL(file);
            }
        }

        // Add this event handler for the create visitor modal
        $('#createVisitorModal input[type="file"]').on('change', function() {
            previewImage(this, 'profilePreview');
        });

        // Add this event handler for the edit visitor modal
        $('#editVisitorModal input[type="file"]').on('change', function() {
            previewImage(this, 'editProfilePreview');
        });

        // Add real-time contact number duplicate checking
        async function checkContactNumberExists(number, currentUserId = null) {
            try {
                const response = await fetch(`/VisitorManagement/CheckContactNumberExists?number=${number}&currentUserId=${currentUserId}`);
                const data = await response.json();
                return data.exists;
            } catch (error) {
                console.error('Error checking contact number:', error);
                return false;
            }
        }

        // Add event listeners for duplicate checking
        $('#User_ContactNumber, #editContactNumber').on('blur', async function() {
            const input = $(this);
            const number = input.val();
            const currentUserId = input.attr('id') === 'editContactNumber' ? $('#editUserId').val() : null;

            if (number && /^09\d{9}$/.test(number)) {
                const exists = await checkContactNumberExists(number, currentUserId);
                if (exists) {
                    input.addClass('is-invalid');
                    input.next('.invalid-feedback').text('This contact number is already registered.');
                } else {
                    input.removeClass('is-invalid');
                }
            }
        });
                // Handle form submission with validation
        $('form').on('submit', async function(e) {
            const form = $(this);
            let isValid = true;

            // Validate contact number
            const contactInput = form.find('input[type="text"][name*="ContactNumber"]');
            if (contactInput.length) {
                const number = contactInput.val();
                const currentUserId = form.find('input[name="UserId"]').val() || null;

                if (!/^09\d{9}$/.test(number)) {
                    contactInput.addClass('is-invalid');
                    isValid = false;
                } else {
                    const exists = await checkContactNumberExists(number, currentUserId);
                    if (exists) {
                        contactInput.addClass('is-invalid');
                        contactInput.next('.invalid-feedback').text('This contact number is already registered.');
                        isValid = false;
                    }
                }
            }

            // Validate image file if present
            const fileInput = form.find('input[type="file"]');
            if (fileInput.length && fileInput[0].files.length > 0) {
                if (!validateImageFile(fileInput[0])) {
                    isValid = false;
                }
            }

            if (!isValid) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Validation Error',
                    text: 'Please fix the errors in the form before submitting.'
                });

                // Scroll to first invalid field
                $('html, body').animate({
                    scrollTop: form.find('.is-invalid').first().offset().top - 100
                }, 500);
            }
        });
    </script>
}