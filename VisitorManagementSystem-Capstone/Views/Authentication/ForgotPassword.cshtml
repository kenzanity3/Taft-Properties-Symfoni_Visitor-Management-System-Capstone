@model VisitorManagementSystem_Capstone.Models.Account
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password | Symfoni Nichols</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="~/css/Authentication.css" />
    <style>
        body {
            background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), 
                        url('/images/symfoninichols.jpg') no-repeat center center fixed;
            background-size: cover;
        }
        
        #bufferingOverlay {
            display: none;
            position: fixed;
            z-index: 9999;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0,0,0,0.4);
            justify-content: center;
            align-items: center;
        }

        #bufferingSpinner {
            color: #c76c04;
            font-size: 3rem;
        }
        
        .auth-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
        }
    </style>
</head>
<body>
    <!-- Buffering overlay -->
    <div id="bufferingOverlay">
        <div>
            <i class="fas fa-spinner fa-spin" id="bufferingSpinner"></i>
            <div class="mt-3 text-light fw-bold">Sending code...</div>
        </div>
    </div>

    <!-- Modern Header -->
    <div class="auth-header">
        <div class="header-content">
            <div class="logo-container">
                <img src="/images/symfoni-nicols-logo.png" alt="Symfoni Logo" class="header-logo">
                <div class="header-text">
                    <h1>Symfoni Nichols</h1>
                    <p>Visitor Management System</p>
                </div>
            </div>
            <div class="header-info">
                <div class="info-item">
                    <i class="fas fa-clock"></i>
                    <span>@DateTime.Now.ToString("dddd, MMMM dd, yyyy")</span>
                </div>
            </div>
        </div>
    </div>

    <div class="auth-container">
        <div class="auth-header-container">
            <h1>Reset Your Password</h1>
            <p>Enter your email to receive a verification code</p>
        </div>

        <form asp-action="ForgotPassword" method="post" id="passwordResetForm">
            @Html.AntiForgeryToken()
            
            <div class="form-group">
                <input type="email" class="form-control" id="Email" name="Email" asp-for="Email" 
                       placeholder="Email" required>
            </div>
            
            <div class="form-group">
                <div class="input-group">
                    <input type="text" class="form-control" name="verificationCode" id="verificationCode" 
                           placeholder="Verification Code" required>
                    <button type="button" class="btn btn-outline-primary" id="sendCodeBtn" onclick="submitEmail()">
                        Send Code
                    </button>
                </div>
            </div>
            
            <div class="form-group">
                <div class="password-container input-group">
                    <input type="password" class="form-control" asp-for="Password" 
                           placeholder="New Password" id="passwordField" required minlength="8">
                    <span class="input-group-text" id="togglePassword">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
                <small class="text-muted">Password must be at least 8 characters.</small>
            </div>

            <button type="submit" class="btn-auth">
                <i class="fas fa-key me-2"></i> Reset Password
            </button>

            <div class="text-center mt-3">
                <a asp-action="Login" class="auth-link">
                    <i class="fas fa-arrow-left me-2"></i> Back to Login
                </a>
            </div>
        </form>
    </div>

    @if (TempData["ShowSuccess"] != null && TempData["ShowSuccess"].ToString() == "true")
    {
        <script>
            Swal.fire({
                icon: 'success',
                title: '@TempData["ForgotPassMessage"]',
                showConfirmButton: true,
                confirmButtonText: 'Proceed to Login',
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("Login", "Authentication")';
                }
            });
        </script>
    }

    @if (ViewData["ErrorVerification"] != null)
    {
        var error = ViewData["ErrorVerification"].ToString();
        <script>
            Swal.fire({
                icon: 'error',
                title: '@error',
                showConfirmButton: true
            });
        </script>
    }

    <script>
        // Buffering overlay logic
        function showBuffering() {
            $("#bufferingOverlay").fadeIn(100);
        }
        function hideBuffering() {
            $("#bufferingOverlay").fadeOut(100);
        }

        function submitEmail() {
            const email = $("#Email").val();
            if (!email) {
                Swal.fire('Error', 'Please enter an email address.', 'error');
                return;
            }
            showBuffering();
            $.ajax({
                url: '/Authentication/SendVerificationCode',
                type: 'POST',
                data: { email: email },
                success: function (response) {
                    hideBuffering();
                    if (response.success === "true") {
                        Swal.fire('Success', response.message, 'success');
                        startCountdown();
                    } else {
                        Swal.fire('Error', response.message, 'error');
                    }
                },
                error: function () {
                    hideBuffering();
                    Swal.fire('Error', 'An error occurred while sending the verification code.', 'error');
                }
            });
        }

        function startCountdown() {
            let countdown = 30;
            const sendButton = $('#sendCodeBtn');
            sendButton.prop('disabled', true);
            sendButton.text(`Resend in ${countdown}s`);
            const interval = setInterval(() => {
                countdown--;
                sendButton.text(`Resend in ${countdown}s`);
                if (countdown === 0) {
                    clearInterval(interval);
                    sendButton.text('Send Code');
                    sendButton.prop('disabled', false);
                }
            }, 1000);
        }

        // Password visibility toggle
        $('#togglePassword').click(function() {
            const type = $('#passwordField').attr('type') === 'password' ? 'text' : 'password';
            $('#passwordField').attr('type', type);
            $(this).find('i').toggleClass('fa-eye fa-eye-slash');
        });

        // Fade in on page load
        $(document).ready(function () {
            $("body").css("display", "none");
            $("body").fadeIn(500);
        });

        // Form validation
        $('#passwordResetForm').on('submit', function() {
            const email = $('#Email').val();
            const code = $('#verificationCode').val();
            const password = $('#passwordField').val();
            
            if (!email || !code || !password) {
                Swal.fire({
                    icon: 'error',
                    title: 'Missing Information',
                    text: 'Please fill in all fields.'
                });
                return false;
            }
            
            if (password.length < 8) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Password',
                    text: 'Password must be at least 8 characters long.'
                });
                return false;
            }
            
            return true;
        });
    </script>
</body>
</html>