@model VisitorManagementSystem_Capstone.Models.Account

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Symfoni Nichols Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="~/css/Authentication.css" />
</head>
<body>
    <!-- Modern Header -->
    <div class="auth-header">
        <div class="header-content">
            <div class="logo-container">
                <img src="/images/symfoni-nicols-logo.png" alt="Symfoni Logo" class="header-logo">
                <div class="header-text">
                    <h1>Symfoni Nichols</h1>
                    <p>Visitor Management System</p>
                </div>
            </div>
            <div class="header-info">
                <div class="info-item">
                    <i class="fas fa-clock"></i>
                    <span>@DateTime.Now.ToString("dddd, MMMM dd, yyyy")</span>
                </div>
            </div>
        </div>
    </div>

    <div class="auth-container">
        <div class="auth-header-container">
            <h1>Welcome Back!</h1>
            <p>Sign in to your account</p>
        </div>

        <form asp-action="Login" method="post" id="loginForm">
            @Html.AntiForgeryToken()
            
            <div class="form-group">
                <input type="text" class="form-control" name="Username" placeholder="Username" required>
            </div>

            <div class="form-group">
                <div class="password-container input-group">
                    <input type="password" class="form-control" name="Password" id="passwordField" placeholder="Password" required>
                    <span class="input-group-text" id="togglePassword">
                        <i class="fas fa-eye"></i>
                    </span>
                </div>
            </div>

            <div class="form-group d-flex justify-content-between align-items-center">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="rememberPassword" name="RememberMe">
                    <label class="form-check-label" for="rememberPassword">Remember me</label>
                </div>
                <a asp-action="ForgotPassword" class="auth-link">Forgot Password?</a>
            </div>

            <button type="submit" class="btn-auth">
                <i class="fas fa-sign-in-alt me-2"></i> Sign In
            </button>

            <div class="text-center mt-3">
                <a href="@Url.Action("SymfoniHome", "Home")" class="btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i> Back to Home
                </a>
            </div>
                    
        </form>
    </div>

    @if (TempData["LogoutMessage"] != null)
    {
        <script>
            Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'success',
                title: '@TempData["LogoutMessage"]',
                showConfirmButton: false,
                timer: 3000
            });
        </script>
    }
    
    @if (TempData["ForgotPassMessage"] != null && TempData["ForgotPassMessage"].ToString() == "Your password has been successfully updated.")
    {
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer;
                    toast.onmouseleave = Swal.resumeTimer;
                }
            });
            Toast.fire({
                icon: "success",
                title: "Your password has been successfully updated."
            });
        </script>
    }
    
    @if (TempData["RegisterMessage"] != null)
    {
        <script>
            Swal.fire({
                icon: 'success',
                title: 'Registration Successful!',
                text: '@TempData["RegisterMessage"]',
                confirmButtonText: 'Proceed to Login'
            });
        </script>
    }
    
    @if (ViewData["LoginErrorMessage"] != null)
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Login Failed',
                text: '@ViewData["LoginErrorMessage"]'
            });
        </script>
    }

    <script>
        $(document).ready(function () {
            // Fade in animation
            $("body").css("display", "none").fadeIn(250);

            // Password visibility toggle
            $('#togglePassword').click(function() {
                const type = $('#passwordField').attr('type') === 'password' ? 'text' : 'password';
                $('#passwordField').attr('type', type);
                $(this).find('i').toggleClass('fa-eye fa-eye-slash');
            });

        @if (TempData["LoginSuccess"] != null && TempData["LoginSuccess"].ToString() == "true")
        {
            <text>
                    // Show success message
                    Swal.fire({
                        icon: 'success',
                        title: 'Login Successful',
                        text: '@TempData["LoginSuccessMessage"]',
                        timer: 2000,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        willClose: () => {
                            // Fade out and redirect
                            $("body").fadeOut(500, function() {
                                var accountType = '@TempData["AccountType"]';
                                var redirectUrl;

                                switch(accountType) {
                                    case 'Admin':
                                        redirectUrl = '@Url.Action("DashboardAdmin", "Admin")';
                                        break;
                                    case 'Staff':
                                        redirectUrl = '@Url.Action("DashboardStaff", "Staff")';
                                        break;
                                    case 'RoomOwner':
                                        redirectUrl = '@Url.Action("DashboardUnitOwner", "RoomOwner")';
                                        break;                                    
                                    default:
                                        redirectUrl = '@Url.Action("Login", "Authentication")';
                                }

                                window.location.href = redirectUrl;
                            });
                        }
                    });
            </text>
        }
        });

        // Form validation
        $('#loginForm').on('submit', function() {
            const username = $('input[name="Username"]').val();
            const password = $('input[name="Password"]').val();
            
            if (!username || !password) {
                Swal.fire({
                    icon: 'error',
                    title: 'Missing Information',
                    text: 'Please enter both username and password.'
                });
                return false;
            }
            
            return true;
        });
    </script>
</body>
</html>