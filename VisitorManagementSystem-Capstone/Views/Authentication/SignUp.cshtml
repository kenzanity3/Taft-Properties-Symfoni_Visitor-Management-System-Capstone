@model VisitorManagementSystem_Capstone.ViewModels.POSTViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Symfoni Nichols Registration</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="~/css/Authentication.css" />
</head>
<body>
    <!-- Modern Header -->
    <div class="auth-header">
        <div class="header-content">
            <div class="logo-container">
                <img src="/images/symfoni-nicols-logo.png" alt="Symfoni Logo" class="header-logo">
                <div class="header-text">
                    <h1>Symfoni Nichols</h1>
                    <p>Visitor Management System</p>
                </div>
            </div>
            <div class="header-info">
                <div class="info-item">
                    <i class="fas fa-clock"></i>
                    <span>@DateTime.Now.ToString("dddd, MMMM dd, yyyy")</span>
                </div>
            </div>
        </div>
    </div>

    <div class="auth-container">
        <div class="auth-header-container">
            <h1>Register as Visitor</h1>
            <p>Join our community today</p>
        </div>

        @if (ViewData.ModelState.ErrorCount > 0)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@modelError.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form asp-action="SignUp" method="post" enctype="multipart/form-data" id="registrationForm">
            @Html.AntiForgeryToken()
            
            <!-- Profile Picture Section -->
            <div class="profile-container">
                <img id="profilePreview" src="/images/default.png" alt="Profile Preview" />
                <label class="profile-upload" for="ProfilePictureFile">
                    <i class="fas fa-camera"></i>
                </label>
                <input asp-for="ProfilePictureFile" type="file" id="ProfilePictureFile"
                       accept="image/jpeg,image/png" style="display:none"
                       onchange="validateAndPreviewImage(event)" />
            </div>
            <div class="input-hint text-center">Max 2MB (JPEG/PNG)</div>
            <span asp-validation-for="ProfilePictureFile" class="field-validation-error text-center"></span>

            <!-- Personal Information Section -->
            <div class="form-group">
                <label class="form-label fw-bold">Personal Information</label>

                <input asp-for="User.FirstName" class="form-control"
                       placeholder="First Name (required)" required
                       pattern="[A-Za-z\s]{2,50}" 
                       title="Only letters and spaces allowed (2-50 characters)" />
                <span asp-validation-for="User.FirstName" class="field-validation-error"></span>

                <input asp-for="User.MiddleName" class="form-control mt-2"
                       placeholder="Middle Name (optional)"
                       pattern="[A-Za-z\s]{0,50}" 
                       title="Only letters and spaces allowed (max 50 characters)" />
                <span asp-validation-for="User.MiddleName" class="field-validation-error"></span>

                <input asp-for="User.LastName" class="form-control mt-2"
                       placeholder="Last Name (required)" required
                       pattern="[A-Za-z\s]{2,50}" 
                       title="Only letters and spaces allowed (2-50 characters)" />
                <span asp-validation-for="User.LastName" class="field-validation-error"></span>
            </div>

            <!-- Contact Information Section -->
            <div class="form-group">
                <label class="form-label fw-bold">Contact Information</label>

                <input asp-for="User.ContactNumber" class="form-control"
                       placeholder="Mobile Number (09XXXXXXXXX)"
                       required
                       pattern="^09\d{9}$"
                       title="Please enter a valid 11-digit mobile number starting with 09"
                       maxlength="11"
                       oninput="validatePhilippineNumber(this)" />
                <div class="input-hint">Format: 09123456789 (11 digits)</div>
                <span asp-validation-for="User.ContactNumber" class="field-validation-error"></span>
                <span id="ContactNumberError" class="text-danger"></span>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn-auth" id="submitButton">
                <i class="fas fa-user-plus me-2"></i> Register Now
            </button>

            <!-- Back to Home Link -->
            <div class="text-center mt-3">
                <a href="@Url.Action("SymfoniHome", "Home")" class="btn-secondary">
                    <i class="fas fa-arrow-left me-2"></i> Back to Home
                </a>
            </div>
            
            <div class="text-center mt-3">
                <span>Already have an account? </span>
                <a asp-action="Login" class="auth-link">Sign In</a>
            </div>
        </form>
    </div>

    <script>
        // Fade in on page load
        $(document).ready(function() {
            $("body").css("display", "none");
            $("body").fadeIn(500);
        });

        // Validate Philippine mobile number format (09XXXXXXXXX)
        function validatePhilippineNumber(input) {
            // Remove non-numeric characters
            input.value = input.value.replace(/[^0-9]/g, '');

            // Limit to 11 digits
            if (input.value.length > 11) {
                input.value = input.value.slice(0, 11);
            }

            // Validate format
            const isValid = /^09\d{0,9}$/.test(input.value);
            const errorSpan = document.getElementById('ContactNumberError');

            if (input.value && !isValid) {
                input.classList.add('is-invalid');
                if (errorSpan) {
                    errorSpan.textContent = 'Please enter a valid Philippine mobile number (09XXXXXXXXX)';
                }
            } else {
                input.classList.remove('is-invalid');
                if (errorSpan) {
                    errorSpan.textContent = '';
                }
            }
        }

        // Combined image validation and preview function
        function validateAndPreviewImage(event) {
            const input = event.target;
            const preview = document.getElementById("profilePreview");
            const file = input.files[0];

            if (!file) {
                preview.src = '/images/default.png';
                return;
            }

            // Validate file type
            const validTypes = ['image/jpeg', 'image/png'];
            if (!validTypes.includes(file.type.toLowerCase())) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid File Type',
                    text: 'Only JPG and PNG images are allowed.'
                });
                input.value = '';
                preview.src = '/images/default.png';
                return;
            }

            // Validate file size (2MB)
            const maxSize = 2 * 1024 * 1024; // 2MB
            if (file.size > maxSize) {
                Swal.fire({
                    icon: 'error',
                    title: 'File Too Large',
                    text: 'Maximum file size is 2MB.'
                });
                input.value = '';
                preview.src = '/images/default.png';
                return;
            }

            // Preview image if valid
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }

        // Contact number duplicate checking
        $('#User_ContactNumber').on('blur', function() {
            const input = $(this);
            const number = input.val();
            const errorSpan = $('#ContactNumberError');

            if (number && /^09\d{9}$/.test(number)) {
                $.get(`/Authentication/CheckContactNumber?contact=${encodeURIComponent(number)}`, function(data) {
                    if (!data.isUnique) {
                        input.addClass('is-invalid');
                        errorSpan.text('This contact number is already registered.').show();
                    } else {
                        input.removeClass('is-invalid');
                        errorSpan.text('').hide();
                    }
                }).fail(function() {
                    errorSpan.text('Could not verify contact number. Please try again.').show();
                });
            }
        });

        // Form submission handler
        $('#registrationForm').on('submit', function(e) {
            const contactNumber = $('#User_ContactNumber').val();
            
            // Final validation for contact number format
            if (!/^09\d{9}$/.test(contactNumber)) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Contact Number',
                    text: 'Please enter a valid Philippine mobile number (09XXXXXXXXX)'
                });
                return;
            }
            
            // Show loading state
            const $btn = $('#submitButton');
            $btn.prop('disabled', true);
            $btn.html('<span class="spinner-border spinner-border-sm me-2"></span>Creating Account...');
        });
    </script>

    @if (TempData["RegistrationSuccess"]?.ToString() == "true")
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                Swal.fire({
                    icon: 'success',
                    title: 'Registration Successful!',
                    html: '@Html.Raw(TempData["RegisterMessage"])',
                    confirmButtonText: 'Continue',
                    allowOutsideClick: false,
                    allowEscapeKey: false
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Redirect to home
                        window.location.href = '@Url.Action("SymfoniHome", "Home")';
                    }
                });
            });
        </script>
    }
</body>
</html>