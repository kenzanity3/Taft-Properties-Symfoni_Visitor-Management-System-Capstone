@model List<VisitorManagementSystem_Capstone.Models.Facility>
@{
    ViewData["Title"] = "Facility Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/css/FacilityManage.css" />
<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>🏢 Facility List</h2>
        <div>
            <button class="btn btn-refresh" onclick="location.reload()">🔄 Refresh</button>
            <button class="btn btn-add" data-bs-toggle="modal" data-bs-target="#createFacilityModal">➕ Create Facility</button>
        </div>
    </div>
    <div class="facility-wrapper">
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Facility ID</th>
                        <th>Name</th>
                        <th>Capacity</th>
                        <th>Status</th>
                        <th>Floor</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var f in Model)
                        {
                            <tr>
                                <td>@f.FacilityId</td>
                                <td>@f.Name</td>
                                <td>@f.Capacity</td>
                                <td>
                                    <span class="badge bg-@(f.FacilityStatus ? "success" : "secondary")">
                                        @(f.FacilityStatus ? "Open" : "Closed")
                                    </span>
                                </td>
                                <td>@f.FloorLevel</td>
                                <td>
                                    <!-- Info Button -->
                                    <button type="button"
                                            class="btn btn-sm btn-info me-1 btn-view-info"
                                            data-bs-toggle="modal"
                                            data-bs-target="#infoFacilityModal"
                                            data-id="@f.FacilityId"
                                            data-name="@f.Name"
                                            data-capacity="@f.Capacity"
                                            data-status="@(f.FacilityStatus ? "Open" : "Closed")"
                                            data-floor="@f.FloorLevel"
                                            data-description="@f.Description"
                                            data-opentime="@(f.OpenTime?.ToString(@"hh\:mm"))"
                                            data-closingtime="@(f.ClosingTime?.ToString(@"hh\:mm"))">
                                        <i class="bi bi-info-circle"></i>
                                    </button>
                                    <!-- Edit Button -->
                                    <button class="btn btn-sm btn-warning"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editFacilityModal"
                                            data-id="@f.FacilityId"
                                            data-name="@f.Name"
                                            data-capacity="@f.Capacity"
                                            data-status="@(f.FacilityStatus ? "Open" : "Closed")"
                                            data-floor="@f.FloorLevel"
                                            data-description="@f.Description"
                                            data-opentime="@(f.OpenTime?.ToString(@"hh\:mm"))"
                                            data-closingtime="@(f.ClosingTime?.ToString(@"hh\:mm"))">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center text-muted">
                                @ViewBag.Message ?? "No facilities to display."
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Create Facility Modal -->
<div class="modal fade" id="createFacilityModal" tabindex="-1" aria-labelledby="createFacilityLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateFacility" asp-controller="Facility" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="createFacilityLabel">➕ Add New Facility</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="mb-3">
                        <label class="form-label">Facility ID</label>
                        <input type="text" id="FacilityId" name="FacilityId" class="form-control" placeholder="e.g., Gym001" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Facility Name</label>
                        <input type="text" id="Name" name="Name" class="form-control" placeholder="e.g., Swimming Pool" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Capacity</label>
                        <input type="number" id="Capacity" name="Capacity" class="form-control" placeholder="e.g., 20" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select form-select-sm" id="Status" name="Status" required>
                            <option value="Open">Open</option>
                            <option value="Closed">Closed</option>
                            <option value="Under Maintenance">Under Maintenance</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Floor</label>
                        <input type="text" id="Floor" name="Floor" class="form-control" placeholder="e.g., Ground / 1st Floor" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Open Time</label>
                        <input type="time" id="OpenTime" name="OpenTime" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Closing Time</label>
                        <input type="time" id="ClosingTime" name="ClosingTime" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea id="Description" name="Description" class="form-control" maxlength="100" placeholder="Description (max 100 characters)"></textarea>
                        <span class="text-muted small" id="descCounterCreate">0/100</span>
                        @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-add">✅ Add Facility</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Edit Facility Modal -->
<div class="modal fade" id="editFacilityModal" tabindex="-1" aria-labelledby="editFacilityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-action="EditFacility">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="editFacilityModalLabel">Edit Facility</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input type="hidden" id="EditFacilityId" name="FacilityId" />
                    <div class="mb-3">
                        <label class="form-label">Facility ID</label>
                        <input type="text" class="form-control" id="EditFacilityIdDisplay" value="" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Facility Name</label>
                        <input type="text" class="form-control" id="EditName" name="Name" placeholder="e.g., Swimming Pool" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Capacity</label>
                        <input type="number" class="form-control" id="EditCapacity" name="Capacity" placeholder="e.g., 20" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select form-select-sm" id="EditStatus" name="Status" required>
                            <option value="Open">Open</option>
                            <option value="Closed">Closed</option>
                            <option value="Under Maintenance">Under Maintenance</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Floor</label>
                        <input type="text" class="form-control" id="EditFloor" name="Floor" placeholder="e.g., Ground / 1st Floor" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Open Time</label>
                        <input type="time" class="form-control" id="EditOpenTime" name="OpenTime" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Closing Time</label>
                        <input type="time" class="form-control" id="EditClosingTime" name="ClosingTime" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="EditDescription" name="Description" maxlength="100" placeholder="Description (max 100 characters)"></textarea>
                        <span class="text-muted small" id="descCounterEdit">0/100</span>
                        @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Info Facility Modal -->
<div class="modal fade" id="infoFacilityModal" tabindex="-1" aria-labelledby="infoFacilityModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Facility Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-4">Facility ID</dt>
                    <dd class="col-sm-8" id="infoFacilityId"></dd>
                    <dt class="col-sm-4">Name</dt>
                    <dd class="col-sm-8" id="infoName"></dd>
                    <dt class="col-sm-4">Capacity</dt>
                    <dd class="col-sm-8" id="infoCapacity"></dd>
                    <dt class="col-sm-4">Status</dt>
                    <dd class="col-sm-8" id="infoStatus"></dd>
                    <dt class="col-sm-4">Floor</dt>
                    <dd class="col-sm-8" id="infoFloor"></dd>
                    <dt class="col-sm-4">Description</dt>
                    <dd class="col-sm-8" id="infoDescription"></dd>
                    <dt class="col-sm-4">Open Time</dt>
                    <dd class="col-sm-8" id="infoOpenTime"></dd>
                    <dt class="col-sm-4">Closing Time</dt>
                    <dd class="col-sm-8" id="infoClosingTime"></dd>
                </dl>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Fill edit modal with data from the row
           document.querySelectorAll('.btn-warning[data-bs-target="#editFacilityModal"]').forEach(function (btn) {
        btn.addEventListener('click', function () {
            document.getElementById('EditFacilityId').value = btn.dataset.id;
            document.getElementById('EditFacilityIdDisplay').value = btn.dataset.id;
                document.getElementById('EditName').value = btn.dataset.name;
                document.getElementById('EditCapacity').value = btn.dataset.capacity;
                document.getElementById('EditStatus').value = btn.dataset.status;
                document.getElementById('EditFloor').value = btn.dataset.floor;
                document.getElementById('EditDescription').value = btn.dataset.description;
                document.getElementById('EditOpenTime').value = btn.dataset.opentime;
                document.getElementById('EditClosingTime').value = btn.dataset.closingtime;
            });
        });
      // Helper to format "HH:mm" to "hh:mm AM/PM"
        function formatTimeToAMPM(timeStr) {
            if (!timeStr) return '';
            const [hour, minute] = timeStr.split(':');
            let h = parseInt(hour, 10);
            const m = minute;
            const ampm = h >= 12 ? 'PM' : 'AM';
            h = h % 12;
            h = h ? h : 12; // 0 should be 12
            return `${h.toString().padStart(2, '0')}:${m} ${ampm}`;
        }
              // Info modal population
            document.querySelectorAll('.btn-view-info').forEach(function (btn) {
            btn.addEventListener('click', function () {
                document.getElementById('infoFacilityId').textContent = btn.dataset.id || '';
                document.getElementById('infoName').textContent = btn.dataset.name || '';
                document.getElementById('infoCapacity').textContent = btn.dataset.capacity || '';
                document.getElementById('infoStatus').textContent = btn.dataset.status || '';
                document.getElementById('infoFloor').textContent = btn.dataset.floor || '';
                document.getElementById('infoDescription').textContent = btn.dataset.description || '';
                document.getElementById('infoOpenTime').textContent = formatTimeToAMPM(btn.dataset.opentime);
                document.getElementById('infoClosingTime').textContent = formatTimeToAMPM(btn.dataset.closingtime);
            });
        });
    </script>
    <script>
        // Live character counter for Create modal
        const descCreate = document.getElementById('Description');
        const counterCreate = document.getElementById('descCounterCreate');
        if (descCreate && counterCreate) {
            descCreate.addEventListener('input', function () {
                counterCreate.textContent = `${descCreate.value.length}/100`;
            });
        }

        // Live character counter for Edit modal
        const descEdit = document.getElementById('EditDescription');
        const counterEdit = document.getElementById('descCounterEdit');
        if (descEdit && counterEdit) {
            descEdit.addEventListener('input', function () {
                counterEdit.textContent = `${descEdit.value.length}/100`;
            });
        }
    </script>
    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            Swal.fire({
                icon: 'success',
                title: '@TempData["SuccessMessage"]',
                toast: true,
                timer: 2000,
                position: 'top-end',
                showConfirmButton: false
            });
        </script>
    }
}
